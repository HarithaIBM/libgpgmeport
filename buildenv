# Update bump details accordingly. Use bump check to confirm.
# bump: libgpgme-version /LIBGPGME_VERSION="(.*)"/ https://github.com/gpg/gpgme.git|semver:*
LIBGPGME_VERSION="1.23.2" # Specify a stable release
#export ZOPEN_STABLE_TAG="gpgme-${LIBGPGME_VERSION}"
export ZOPEN_STABLE_URL="https://gnupg.org/ftp/gcrypt/gpgme/gpgme-${LIBGPGME_VERSION}.tar.bz2"
export ZOPEN_DEV_URL="https://github.com/gpg/gpgme.git"
export ZOPEN_STABLE_DEPS="make bzip2 tar curl perl automake autoconf m4 sed gettext zoslib diffutils libgpgerror npth libgcrypt libksba libassuan texinfo pinentry ncurses ntbtls zlib zip git gpg gnulib getopt libtool which"
export ZOPEN_DEV_DEPS="make bzip2 tar curl perl automake autoconf m4 sed gettext zoslib diffutils libgpgerror npth libgcrypt libksba libassuan texinfo pinentry ncurses ntbtls zlib zip git gpg gnulib getopt libtool"
export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_CATEGORIES="development"
export ZOPEN_COMP=CLANG
export ZOPEN_BOOTSTRAP="./autogen.sh"

zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"
  failures=$(egrep "^FAIL:" $chk | wc -l) 
  skipped=$(egrep "^SKIP:" $chk | wc -l)
  passed=$(egrep "^PASS:" $chk | wc -l)
  totalTests=$(($failures+$skipped+$passed))
	
	# Echo the following information to gauge build health
cat <<ZZ
actualFailures:${failures}
totalTests:${totalTests}
expectedFailures:1
ZZ

}

zopen_get_version()
{
  # Modify to echo the version of your tool/library
  # Rather than hardcoding the version, obtain the version by running the tool/library
  echo "${LIBGPGME_VERSION}"
}
